<?php

namespace App\Models;

use Backpack\CRUD\app\Models\Traits\CrudTrait;
use Illuminate\Database\Eloquent\Model;
use Backpack\CRUD\app\Models\Traits\SpatieTranslatable\HasTranslations;
use App\Traits\MakesWebp;
use App\Traits\SaveImageAttribute;

// Elements of catalog menu
class MenuCatalogItem extends Model
{
    use CrudTrait;
    use HasTranslations;
    use MakesWebp;
    use SaveImageAttribute;

    protected $table = 'menu_catalog_items';
    protected $fillable = ['title', 'url', 'parent_id', 'image', 'is_background', 'is_double_column'];
    protected $translatable = ['title'];
    public static $images = ['image'];

    // Parent
    public function parent()
    {
        return $this->belongsTo('App\Models\MenuCatalogItem', 'parent_id');
    }

    // Nested elements
    public function children()
    {
        return $this->hasMany('App\Models\MenuCatalogItem', 'parent_id');
    }

    // Building a tree
    public static function getTree()
    {
        $menu = self::orderBy('lft')->get();

        if ($menu->count()) {
            foreach ($menu as $k => $menu_item) {
                $menu_item->children = collect([]);

                foreach ($menu as $i => $menu_subitem) {
                    if ($menu_subitem->parent_id == $menu_item->id) {
                        $menu_item->children->push($menu_subitem);

                        $menu = $menu->reject(function ($item) use ($menu_subitem) {
                            return $item->id == $menu_subitem->id;
                        });
                    }
                }
            }
        }

        return $menu;
    }
}
